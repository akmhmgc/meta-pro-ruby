next
nexr
next
base
skip
base
next
base
next
base
const_get(:ClassMethods).instance_methods
exit
const_get(:ClassMethods).
const_get(:ClassMethods).methods.grep(/seco/)
const_get(:ClassMethods).methods
self
const_get(:ClassMethods).instance_methods
const_get(:ClassMethods)
self
FirstLevelModule::ClassMethods.instance_methods
@_dependencies
@_dependencies.each { |dep| base.include(dep) }
base
FirstLevelModule::ClassMethods.instance_methods
FirstLevelModule::ClassMethods.singleton_methods
FirstLevelModule::ClassMethods.methods
FirstLevelModule::ClassMethods
FirstLevelModule
base
self
selg
@_included_block
const_get(:ClassMethods).instance_methods
const_get(:ClassMethods)
const_get(:ClassMethods).methods
const_get(:ClassMethods)
base
@_dependencies
base < self
next
nex
next
base.instance_variable_get(:@_dependencies) << se
self
base.instance_variable_get(:@_dependencies)
base
self
base
exit
eixt
ClassMethods
base.const_get(:ClassMethods)
ClassMethods
exit
Module.respond_to?(:include)
Module.respond_to?
Module.respond?
Module.methods.grep(/inc/)
Modulemethods.grep(/inc/)
M.class.methods.grep(/inc/)
M.class.methods
M.class
exit
const_get(:ClassMethods)
base
exit
M.include
M.class
M.super
M
exit
exi
base
exit
exi
const_get(:ClassMethods)
super
@_dependencies
base > self
base < self
exit
ActiveRecord::Concern::M1 >  M1
ActiveRecord::Concern::M1 < M1
ActiveRecord::Concern::M1 > M1
ActiveRecord::Concern::M1 < ActiveRecord::Concern::M1::M2
ActiveRecord::Concern::M1 > ActiveRecord::Concern::M1::M2
ActiveRecord::Concern::M1 > ActiveRecord::Concern::M1:M2
ActiveRecord::Concern::M1 > M1
ActiveRecord::Concern::M1
M1
M1 > M1::M2
M1 >  M1::M2
M1 < M1::M2
M1::M2
M1::m2
M2
module M1::M2 end
M2
M1::M2
M2
module M1:M2 end
M1
module M1 end
M::A
M::sa
base < self
self
base
base.instance_variable_defined?(:@_dependencies)
base
@_dependencies
exit
base
self
base
self
exit
M.instance_variables
M
<
base.instance_variable
base
baas
@_dependencies
exit
base
self
ClassMethod
ClassMethods
::ClassMethods
::ClassMethod
exit
ClassMethodIncluder::ClassMethod
ClassMethodIncluder::ClassMethods
ClassMethodIncluder
::ClassMethods
::ClassMethod
::
ClassMethod
ClassMethods
exit
mod.instance_methods(:false)
mod
self
exit
exir
eixt
const_defined?(:ClassMethods)
const_defined?(:ClassMethods, fals)
const_defined?(:ClassMethods, false)
const_defined?(:ClassMethods, true)
const_defined?(:ClassMethods, false)
const_get(:ClassMet)
const_get(:ClassMethod)
const_get(:ClassMethods)
mod
mid
